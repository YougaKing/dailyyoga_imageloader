import java.util.regex.Matcher
import java.util.regex.Pattern

// Define versions in a single place
ext.projectConfig = [
        // Sdk and tools
        compileSdkVersion    : 28,
        buildToolsVersion    : '28.0.3',

        minSdkVersion        : 16,
        targetSdkVersion     : 27,

        // App dependencies
        supportLibraryVersion: '28.0.0',

        version_code         : 243,
        version_name         : '7.16.0.0',

        tinker_version       : '1.9.9',

        isRelease            : this.&isRelease
]


/**
 * 如果只想在Release中打开tinker，可以把tinkerEnable赋值为这个函数的return
 * @return 是否为release
 */
def isRelease() {
    Gradle gradle = getGradle()
    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()

    Pattern pattern
    if (tskReqStr.contains("assemble")) {
        println tskReqStr
        pattern = Pattern.compile("assemble(\\w*)(Release|Debug)")
    } else {
        pattern = Pattern.compile("generate(\\w*)(Release|Debug)")
    }
    Matcher matcher = pattern.matcher(tskReqStr)

    if (matcher.find()) {
        String task = matcher.group(0).toLowerCase()
        println("[BuildType] Current task: " + task)
        return task.contains("release")
    } else {
        println "[BuildType] NO MATCH FOUND"
        return true
    }
}